generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model access_token {
  token        String       @id @db.VarChar(255)
  client_id    Int          @db.UnsignedInt
  user_id      Int          @db.UnsignedInt
  scope        String       @db.VarChar(255)
  expires_at   DateTime     @db.DateTime(0)
  created_at   DateTime?    @default(now()) @db.DateTime(0)
  oauth_client oauth_client @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "access_token_ibfk_1")
  user         user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "access_token_ibfk_2")

  @@index([client_id], map: "client_id")
  @@index([user_id], map: "user_id")
}

model authorization_code {
  code         String       @id @db.VarChar(100)
  client_id    Int          @db.UnsignedInt
  user_id      Int          @db.UnsignedInt
  redirect_uri String       @db.VarChar(500)
  expires_at   DateTime     @db.DateTime(0)
  created_at   DateTime?    @default(now()) @db.DateTime(0)
  oauth_client oauth_client @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "authorization_code_ibfk_1")
  user         user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "authorization_code_ibfk_2")

  @@index([client_id], map: "client_id")
  @@index([user_id], map: "user_id")
}

model clinic {
  id    Int    @id @default(autoincrement()) @db.UnsignedInt
  name  String @db.VarChar(200)
  email String @db.VarChar(14)
  user  user[]
}

model oauth_client {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  name               String               @db.VarChar(200)
  client_id          String               @unique(map: "client_id") @db.VarChar(100)
  client_secret      String               @db.VarChar(200)
  redirect_uris      String               @db.Text
  created_at         DateTime?            @default(now()) @db.DateTime(0)
  access_token       access_token[]
  authorization_code authorization_code[]
  refresh_token      refresh_token[]
}

model profile {
  id   Int    @id @default(autoincrement()) @db.UnsignedInt
  name String @db.VarChar(200)
  user user[]
}

model refresh_token {
  token        String       @id @db.VarChar(255)
  client_id    Int          @db.UnsignedInt
  user_id      Int          @db.UnsignedInt
  scope        String       @db.VarChar(255)
  expires_at   DateTime     @db.DateTime(0)
  created_at   DateTime?    @default(now()) @db.DateTime(0)
  oauth_client oauth_client @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "refresh_token_ibfk_1")
  user         user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "refresh_token_ibfk_2")

  @@index([client_id], map: "client_id")
  @@index([user_id], map: "user_id")
}

model user {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  clinic_id          Int                  @db.UnsignedInt
  profile_id         Int                  @db.UnsignedInt
  name               String               @db.VarChar(200)
  email              String               @db.VarChar(150)
  password           String               @db.Char(64)
  created_at         DateTime?            @default(now()) @db.DateTime(0)
  updated_at         DateTime?            @default(now()) @db.DateTime(0)
  is_active          Boolean?             @default(false)
  access_token       access_token[]
  authorization_code authorization_code[]
  refresh_token      refresh_token[]
  clinic             clinic               @relation(fields: [clinic_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_ibfk_1")
  profile            profile              @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_ibfk_2")

  @@index([clinic_id], map: "clinic_id")
  @@index([profile_id], map: "profile_id")
}
